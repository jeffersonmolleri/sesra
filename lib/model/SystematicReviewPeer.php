<?php


/**
 * Skeleton subclass for performing query and update operations on the 'systematic_reviews' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sat Oct 20 13:59:37 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class SystematicReviewPeer extends BaseSystematicReviewPeer {
  public static function doSelectList(Criteria $c)
  {
    $c = clone $c;
    $c->clearSelectColumns()
    ->addSelectColumn(self::ID)//0
    ->addSelectColumn(self::TITLE)//1
    ->addSelectColumn(self::QUESTION)//2
    ->addSelectColumn(self::RESTRICT)//3
    ->addSelectColumn(self::CREATED_AT)//4
    ->addSelectColumn(self::CREATED_BY)//5
    ->addSelectColumn(sfGuardUserProfilePeer::NAME)//6
    ->addSelectColumn(SystematicReviewUserPeer::LEVEL)//7
    ->addAsColumn('concluded', 'EXISTS(SELECT ' . JobPeer::ID .
    				' FROM ' . ProtocolPeer::TABLE_NAME .
    				' INNER JOIN ' . JobPeer::TABLE_NAME .
    					' ON ' . JobPeer::PROTOCOL_ID . ' = ' . ProtocolPeer::ID .
    					' AND ' . JobPeer::ACTIVITY_ID . ' = 18' .
    					' AND ' . JobPeer::FINISHED_AT . ' IS NOT NULL' .
    				' WHERE ' . SystematicReviewPeer::ID . ' = ' . ProtocolPeer::RSL_ID . ')')//8
    ->addAsColumn('jobs_concluded', '(SELECT COUNT(DISTINCT ' . JobPeer::ACTIVITY_ID . ')'. 
    				' FROM ' . ProtocolPeer::TABLE_NAME .
    				' INNER JOIN ' . JobPeer::TABLE_NAME . 
    					' ON ' . JobPeer::PROTOCOL_ID . ' = ' . ProtocolPeer::ID .
    					' AND ' . JobPeer::FINISHED_AT . ' IS NOT NULL' .
    				' WHERE ' . SystematicReviewPeer::ID . ' = ' . ProtocolPeer::RSL_ID . ')');//9
  
    $c->addJoin(self::CREATED_BY,sfGuardUserProfilePeer::USER_ID, Criteria::LEFT_JOIN);
    $c->addJoin(self::ID,SystematicReviewUserPeer::SYSTEMATIC_REVIEW_ID, Criteria::INNER_JOIN);
  
    return self::doSelectRS($c);
  }
  
   public static function doCountList(Criteria $c)
  {
    $c = clone $c;
    $c->addJoin(self::CREATED_BY,sfGuardUserProfilePeer::USER_ID, Criteria::LEFT_JOIN);
    $c->addJoin(self::ID,SystematicReviewUserPeer::SYSTEMATIC_REVIEW_ID, Criteria::INNER_JOIN);
  
    return self::doCount($c);
  }
  
  public static function doSelectRS(Criteria $criteria, $con = null)
  {
  
    foreach (sfMixer::getCallables('BaseSystematicReviewPeer:doSelectRS:doSelectRS') as $callable)
    {
      call_user_func($callable, 'BaseSystematicReviewPeer', $criteria, $con);
    }
  
  
  
    foreach (sfMixer::getCallables('BaseSystematicReviewPeer:addDoSelectRS:addDoSelectRS') as $callable)
    {
      call_user_func($callable, 'BaseSystematicReviewPeer', $criteria, $con);
    }
  
  
    if ($con === null) {
      $con = Propel::getConnection(self::DATABASE_NAME);
    }
  
    if (!$criteria->getSelectColumns()) {
      $criteria = clone $criteria;
      SystematicReviewPeer::addSelectColumns($criteria);
    }
  
    $criteria->setDbName(self::DATABASE_NAME);
  
    return BasePeer::doSelect($criteria, $con);
  }
} // SystematicReviewPeer
