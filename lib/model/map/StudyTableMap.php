<?php


/**
 * This class defines the structure of the 'studies' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Aug 22 18:28:56 2013
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class StudyTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.StudyTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('studies');
		$this->setPhpName('Study');
		$this->setClassname('Study');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('studies_id_seq');
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addColumn('TITLE', 'Title', 'VARCHAR', true, 255, null);
		$this->addColumn('STUDY_ABSTRACT', 'StudyAbstract', 'LONGVARCHAR', false, null, null);
		$this->addColumn('URL', 'Url', 'VARCHAR', true, 500, null);
		$this->addColumn('PUBLICATION_DATE', 'PublicationDate', 'DATE', false, null, null);
		$this->addColumn('BIBTEX', 'Bibtex', 'LONGVARCHAR', false, null, null);
		$this->addForeignKey('BASE_ID', 'BaseId', 'INTEGER', 'search_bases', 'ID', true, null, null);
		$this->addForeignKey('SYSTEMATIC_REVIEW_ID', 'SystematicReviewId', 'INTEGER', 'systematic_reviews', 'ID', true, null, null);
		$this->addForeignKey('CASTING_VOTE', 'CastingVote', 'INTEGER', 'sf_guard_user', 'ID', false, null, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('DELETED_AT', 'DeletedAt', 'TIMESTAMP', false, null, null);
		$this->addForeignKey('CREATED_BY', 'CreatedBy', 'INTEGER', 'sf_guard_user', 'ID', true, null, null);
		$this->addForeignKey('UPDATED_BY', 'UpdatedBy', 'INTEGER', 'sf_guard_user', 'ID', true, null, null);
		$this->addForeignKey('DELETED_BY', 'DeletedBy', 'INTEGER', 'sf_guard_user', 'ID', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('SearchBase', 'SearchBase', RelationMap::MANY_TO_ONE, array('base_id' => 'id', ), null, null);
    $this->addRelation('SystematicReview', 'SystematicReview', RelationMap::MANY_TO_ONE, array('systematic_review_id' => 'id', ), null, null);
    $this->addRelation('sfGuardUserRelatedByCastingVote', 'sfGuardUser', RelationMap::MANY_TO_ONE, array('casting_vote' => 'id', ), 'CASCADE', null);
    $this->addRelation('sfGuardUserRelatedByCreatedBy', 'sfGuardUser', RelationMap::MANY_TO_ONE, array('created_by' => 'id', ), 'CASCADE', null);
    $this->addRelation('sfGuardUserRelatedByUpdatedBy', 'sfGuardUser', RelationMap::MANY_TO_ONE, array('updated_by' => 'id', ), 'CASCADE', null);
    $this->addRelation('sfGuardUserRelatedByDeletedBy', 'sfGuardUser', RelationMap::MANY_TO_ONE, array('deleted_by' => 'id', ), 'CASCADE', null);
    $this->addRelation('StudyUserCriteria', 'StudyUserCriteria', RelationMap::ONE_TO_MANY, array('id' => 'study_id', ), null, null);
    $this->addRelation('Answer', 'Answer', RelationMap::ONE_TO_MANY, array('id' => 'study_id', ), null, null);
    $this->addRelation('DataExtraction', 'DataExtraction', RelationMap::ONE_TO_MANY, array('id' => 'study_id', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // StudyTableMap
